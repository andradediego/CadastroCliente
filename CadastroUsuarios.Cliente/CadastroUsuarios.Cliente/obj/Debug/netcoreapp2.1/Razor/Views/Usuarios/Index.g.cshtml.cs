#pragma checksum "D:\TesteAthos\CadastroUsuarios.Cliente\CadastroUsuarios.Cliente\Views\Usuarios\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "33b067c1363e35a12a30732ac8a67b9b10ca482c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Usuarios_Index), @"mvc.1.0.view", @"/Views/Usuarios/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Usuarios/Index.cshtml", typeof(AspNetCore.Views_Usuarios_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\TesteAthos\CadastroUsuarios.Cliente\CadastroUsuarios.Cliente\Views\_ViewImports.cshtml"
using CadastroUsuarios.Cliente;

#line default
#line hidden
#line 2 "D:\TesteAthos\CadastroUsuarios.Cliente\CadastroUsuarios.Cliente\Views\_ViewImports.cshtml"
using CadastroUsuarios.Cliente.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"33b067c1363e35a12a30732ac8a67b9b10ca482c", @"/Views/Usuarios/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"69a7ba06f208d3772776c154bbdff64ecef861ce", @"/Views/_ViewImports.cshtml")]
    public class Views_Usuarios_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\TesteAthos\CadastroUsuarios.Cliente\CadastroUsuarios.Cliente\Views\Usuarios\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 347, true);
            WriteLiteral(@"
<style>
    .mensagem-padding {
        padding: 15px;
    }
</style>

<br />
<div class=""row"" id=""form-usuario"">
    <div class=""col-xs-12 col-md-6 col-md-offset-3"">
        <p v-if=""erro || sucesso"" v-bind:class=""{'bg-danger': erro, 'bg-success': sucesso}"" class=""mensagem-padding""><strong>{{ mensagemUsuario }}</strong></p>
        ");
            EndContext();
            BeginContext(392, 1951, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "790196a791074b43bedcfae5e7bb20a0", async() => {
                BeginContext(398, 275, true);
                WriteLiteral(@"
            <div class=""form-group"" v-bind:class=""{'has-error': $v.nome.$error}"">
                <label for=""Nome"">Nome:</label>
                <input type=""text"" class=""form-control"" id=""Nome"" name=""Nome"" placeholder=""Nome""
                       v-model.lazy=""nome"" ");
                EndContext();
                BeginContext(674, 443, true);
                WriteLiteral(@"@input=""$v.nome.$touch()"" />
                <span class=""help-block"" v-if=""$v.nome.$error"">Nome inválido</span>
            </div>
            <div class=""form-group"" v-bind:class=""{'has-error': $v.sobrenome.$error}"">
                <label for=""Sobrenome"">Sobrenome:</label>
                <input type=""text"" class=""form-control"" id=""Sobrenome"" name=""Sobrenome"" placeholder=""Sobrenome""
                       v-model.lazy=""sobrenome"" ");
                EndContext();
                BeginContext(1118, 442, true);
                WriteLiteral(@"@input=""$v.sobrenome.$touch()"" />
                <span class=""help-block"" v-if=""$v.sobrenome.$error"">Sobrenome inválido</span>
            </div>
            <div class=""form-group"" v-bind:class=""{'has-error': $v.cpf.$error}"">
                <label for=""CPF"">CPF:</label>
                <input type=""text"" v-mask=""'###.###.###-##'"" class=""form-control""
                       id=""CPF"" name=""CPF"" placeholder=""CPF"" v-model.lazy=""cpf"" ");
                EndContext();
                BeginContext(1561, 480, true);
                WriteLiteral(@"@input=""$v.cpf.$touch()"" />
                <span class=""help-block"" v-if=""$v.cpf.$error"">CPF inválido</span>
            </div>
            <div class=""form-group"" v-bind:class=""{'has-error': $v.telefone.$error}"">
                <label for=""Telefone"">Telefone:</label>
                <input type=""text"" v-mask=""['(##) ####-####', '(##) #####-####']"" class=""form-control"" id=""Telefone""
                       name=""Telefone"" placeholder=""Telefone"" v-model.lazy=""telefone"" ");
                EndContext();
                BeginContext(2042, 294, true);
                WriteLiteral(@"@input=""$v.telefone.$touch()"" />
                <span class=""help-block"" v-if=""$v.telefone.$error"">Telefone inválido</span>
            </div>

            <button v-bind:disabled=""$v.$invalid"" class=""btn btn-primary"" v-on:click.prevent=""EnviarFormulario($event)"">Enviar</button>
        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2343, 2249, true);
            WriteLiteral(@"
    </div>

</div>

<script>
    Vue.use(window.vuelidate.default);
    const { required } = window.validators;
    new Vue({
        el: '#form-usuario',
        data: {
            erro: false,
            sucesso: false,
            mensagemUsuario: '',
            nome: '',
            sobrenome: '',
            cpf: '',
            telefone: ''
        },
        validations: {
            nome: {
                required
            },
            sobrenome: {
                required: required
            },
            cpf: {
                required: required,
                cpfValido: function (valor) {
                    var validarCPF = new CPF();
                    return validarCPF.valida(valor);
                }
            },
            telefone: {
                required: required
            }
        },
        methods: {
            EnviarFormulario: function (e) {
                this.erro = false;
                this.sucesso = false;

   ");
            WriteLiteral(@"             var url = 'http://localhost:50858/api/Usuarios/CadastrarUsuario';
                var dados = {
                    id: null,
                    nome: this.nome,
                    sobrenome: this.sobrenome,
                    cpf: this.cpf,
                    telefone: this.telefone,
                };

                try {
                    this.$http.post(url, dados).then(
                        function (data) {
                            this.sucesso = true;
                            this.mensagemUsuario = 'Usuário ' + data.body.nome + ' cadastrado com sucesso';
                            this.nome = '';
                            this.sobrenome = '';
                            this.cpf = '';
                            this.telefone = '';
                        },
                        function (error) {
                            this.erro = true;
                            this.mensagemUsuario = error;
                        }
                   ");
            WriteLiteral(" );\r\n                } catch (e) {\r\n                    this.erro = true;\r\n                    this.mensagemUsuario = e.message;\r\n                }\r\n\r\n            }\r\n        }\r\n    });\r\n\r\n</script>\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
